// Code generated by protoc-gen-go.
// source: RealTimeVector.proto
// DO NOT EDIT!

/*
Package RealTimeVector is a generated protocol buffer package.

It is generated from these files:
	RealTimeVector.proto

It has these top-level messages:
	Beacon
	SingleRingRealTimeVector
	RealTimeVectors
*/
package RealTimeVector

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 信标
type Beacon struct {
	Id   uint64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Rssi float32 `protobuf:"fixed32,2,opt,name=rssi" json:"rssi,omitempty"`
}

func (m *Beacon) Reset()                    { *m = Beacon{} }
func (m *Beacon) String() string            { return proto.CompactTextString(m) }
func (*Beacon) ProtoMessage()               {}
func (*Beacon) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Beacon) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Beacon) GetRssi() float32 {
	if m != nil {
		return m.Rssi
	}
	return 0
}

// 一个手环信标信息
type SingleRingRealTimeVector struct {
	RingMac uint64    `protobuf:"varint,1,opt,name=ring_mac" json:"ring_mac,omitempty"`
	Battery int32     `protobuf:"varint,2,opt,name=battery" json:"battery,omitempty"`
	AccX    float64   `protobuf:"fixed64,3,opt,name=acc_x" json:"acc_x,omitempty"`
	AccY    float64   `protobuf:"fixed64,4,opt,name=acc_y" json:"acc_y,omitempty"`
	AccZ    float64   `protobuf:"fixed64,5,opt,name=acc_z" json:"acc_z,omitempty"`
	Alarm   int32     `protobuf:"varint,6,opt,name=alarm" json:"alarm,omitempty"`
	Beacons []*Beacon `protobuf:"bytes,7,rep,name=beacons" json:"beacons,omitempty"`
}

func (m *SingleRingRealTimeVector) Reset()                    { *m = SingleRingRealTimeVector{} }
func (m *SingleRingRealTimeVector) String() string            { return proto.CompactTextString(m) }
func (*SingleRingRealTimeVector) ProtoMessage()               {}
func (*SingleRingRealTimeVector) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SingleRingRealTimeVector) GetRingMac() uint64 {
	if m != nil {
		return m.RingMac
	}
	return 0
}

func (m *SingleRingRealTimeVector) GetBattery() int32 {
	if m != nil {
		return m.Battery
	}
	return 0
}

func (m *SingleRingRealTimeVector) GetAccX() float64 {
	if m != nil {
		return m.AccX
	}
	return 0
}

func (m *SingleRingRealTimeVector) GetAccY() float64 {
	if m != nil {
		return m.AccY
	}
	return 0
}

func (m *SingleRingRealTimeVector) GetAccZ() float64 {
	if m != nil {
		return m.AccZ
	}
	return 0
}

func (m *SingleRingRealTimeVector) GetAlarm() int32 {
	if m != nil {
		return m.Alarm
	}
	return 0
}

func (m *SingleRingRealTimeVector) GetBeacons() []*Beacon {
	if m != nil {
		return m.Beacons
	}
	return nil
}

// 所有信标
type RealTimeVectors struct {
	TimeRecv      int64                       `protobuf:"varint,1,opt,name=time_recv" json:"time_recv,omitempty"`
	SingleRingRtv []*SingleRingRealTimeVector `protobuf:"bytes,2,rep,name=single_ring_rtv" json:"single_ring_rtv,omitempty"`
}

func (m *RealTimeVectors) Reset()                    { *m = RealTimeVectors{} }
func (m *RealTimeVectors) String() string            { return proto.CompactTextString(m) }
func (*RealTimeVectors) ProtoMessage()               {}
func (*RealTimeVectors) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *RealTimeVectors) GetTimeRecv() int64 {
	if m != nil {
		return m.TimeRecv
	}
	return 0
}

func (m *RealTimeVectors) GetSingleRingRtv() []*SingleRingRealTimeVector {
	if m != nil {
		return m.SingleRingRtv
	}
	return nil
}

func init() {
	proto.RegisterType((*Beacon)(nil), "RealTimeVector.Beacon")
	proto.RegisterType((*SingleRingRealTimeVector)(nil), "RealTimeVector.SingleRingRealTimeVector")
	proto.RegisterType((*RealTimeVectors)(nil), "RealTimeVector.RealTimeVectors")
}

func init() { proto.RegisterFile("RealTimeVector.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 268 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x91, 0xcb, 0x4a, 0xc4, 0x30,
	0x18, 0x85, 0x49, 0xaf, 0xfa, 0x7b, 0xa9, 0x06, 0x91, 0xe0, 0xaa, 0x74, 0x63, 0x57, 0x59, 0x8c,
	0x2f, 0xa0, 0x7d, 0x02, 0xa9, 0xe2, 0xb6, 0xa4, 0x99, 0x58, 0x02, 0xb9, 0x94, 0x24, 0x14, 0xc7,
	0xc7, 0xf1, 0x49, 0xc5, 0x78, 0xc1, 0x0e, 0xcc, 0xf2, 0x24, 0x7c, 0x87, 0xef, 0xf0, 0xc3, 0x55,
	0x2f, 0x98, 0x7a, 0x96, 0x5a, 0xbc, 0x08, 0x1e, 0xac, 0xa3, 0xb3, 0xb3, 0xc1, 0xe2, 0xf3, 0xf5,
	0x6b, 0xd3, 0x40, 0xd1, 0x09, 0xc6, 0xad, 0xc1, 0x00, 0x89, 0xdc, 0x12, 0x54, 0xa3, 0x36, 0xc3,
	0xa7, 0x90, 0x39, 0xef, 0x25, 0x49, 0x6a, 0xd4, 0x26, 0xcd, 0x07, 0x02, 0xf2, 0x24, 0xcd, 0xa4,
	0x44, 0x2f, 0xcd, 0xb4, 0x2e, 0xc0, 0x17, 0x70, 0xe4, 0xa4, 0x99, 0x06, 0xcd, 0xf8, 0x0f, 0x5c,
	0x41, 0x39, 0xb2, 0x10, 0x84, 0xdb, 0x45, 0x3e, 0xc7, 0x67, 0x90, 0x33, 0xce, 0x87, 0x37, 0x92,
	0xd6, 0xa8, 0x45, 0xbf, 0x71, 0x47, 0xb2, 0xff, 0xf1, 0x9d, 0xe4, 0x7f, 0x51, 0x31, 0xa7, 0x49,
	0x11, 0xd9, 0x5b, 0x28, 0xc7, 0xe8, 0xe7, 0x49, 0x59, 0xa7, 0xed, 0xc9, 0xe6, 0x9a, 0xee, 0xed,
	0xfa, 0xd6, 0x6f, 0x26, 0xa8, 0xd6, 0x1f, 0x1e, 0x5f, 0xc2, 0x71, 0x90, 0x5a, 0x0c, 0x4e, 0xf0,
	0x25, 0xba, 0xa5, 0xf8, 0x01, 0x2a, 0x1f, 0x97, 0x0c, 0x51, 0xda, 0x85, 0x85, 0x24, 0xb1, 0xb6,
	0xdd, 0xaf, 0x3d, 0x34, 0xb8, 0xbb, 0x87, 0x86, 0x5b, 0x4d, 0xb9, 0x08, 0xdc, 0xb0, 0x85, 0x4a,
	0xa3, 0x36, 0x74, 0x56, 0x2c, 0xbc, 0x5a, 0xa7, 0xe9, 0x3c, 0x52, 0x6d, 0xb7, 0x42, 0x75, 0x37,
	0x6b, 0xaa, 0x17, 0xb3, 0x75, 0xe1, 0xf1, 0xeb, 0x04, 0x7e, 0x2c, 0xe2, 0x29, 0xee, 0x3e, 0x03,
	0x00, 0x00, 0xff, 0xff, 0x82, 0xf8, 0xd1, 0x17, 0xa2, 0x01, 0x00, 0x00,
}
